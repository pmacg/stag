
name: Test
on: [push]
jobs:
  Build-Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install Eigen
        run: sudo apt-get install -y libeigen3-dev
      - name: Install Spectra
        run: |
          wget https://github.com/yixuan/spectra/archive/v1.0.1.tar.gz
          tar xzvf v1.0.1.tar.gz
          cd spectra-1.0.1/
          mkdir build && cd build
          cmake ..
          sudo make all && sudo make install
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cmake -S . -B cmake-build-release -DCMAKE_BUILD_TYPE=Test
      - run: cmake --build cmake-build-release --target stagt
      - uses: actions/upload-artifact@master
        with:
          name: test-binary-linux
          path: cmake-build-release/stagt
      - uses: actions/upload-artifact@master
        with:
          name: shared-library-linux
          path: cmake-build-release/stag_lib/stag.so

  Test-Linux:
    runs-on: ubuntu-latest
    needs: Build-Linux
    env:
      LD_LIBRARY_PATH: ${{ github.workspace }}/stag_lib
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: test-binary-linux
          path: .
      - uses: actions/download-artifact@master
        with:
          name: shared-library-linux
          path: stag_lib/
      - run: chmod +x stagt
      - name: Run Tests
        run: ./stagt
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            test-binary-linux
            shared-library-linux

  Test-Coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Eigen
        run: sudo apt-get install -y libeigen3-dev
      - name: Install Spectra
        run: |
          wget https://github.com/yixuan/spectra/archive/v1.0.1.tar.gz
          tar xzvf v1.0.1.tar.gz
          cd spectra-1.0.1/
          mkdir build && cd build
          cmake ..
          sudo make all && sudo make install
      - name: Install gcovr
        run: pip install gcovr
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cmake -S . -B cmake-build-test-coverage -DCMAKE_BUILD_TYPE=Test -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_C_FLAGS=--coverage
      - run: cmake --build cmake-build-test-coverage --target stagt
      - run: chmod +x ./cmake-build-test-coverage/stagt
      - run: ./cmake-build-test-coverage/stagt
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
          exclude: "test/, stagtools/, stag_lib/indicators/, stag_lib/KMeansRex/, stag_lib/multithreading/"

  Build-Macos:
    runs-on: macos-latest
    steps:
      - name: Install Eigen
        run: |
          curl --output eigen-3.4.0.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip
          unzip eigen-3.4.0.zip
          cd eigen-3.4.0
          mkdir build
          cd build
          cmake ..
          sudo cmake --build . --target install
          cd ../..
      - name: Install Spectra
        run: |
          curl --output v1.0.1.zip -L0 https://github.com/yixuan/spectra/archive/v1.0.1.zip
          unzip v1.0.1.zip
          cd spectra-1.0.1
          mkdir build
          cd build
          cmake ..
          sudo cmake --build . --target install
          cd ../..
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cmake -S . -B cmake-build-release -DCMAKE_BUILD_TYPE=Test
      - run: cmake --build cmake-build-release --target stagt_static
      - uses: actions/upload-artifact@master
        with:
          name: test-binary-macos
          path: cmake-build-release/stagt_static

  Test-Macos:
    runs-on: macos-latest
    needs: Build-Macos
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: test-binary-macos
          path: .
      - run: chmod +x stagt_static
      - name: Run Tests
        run: ./stagt_static
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            test-binary-macos

  Build-Windows:
    runs-on: windows-latest
    steps:
      - name: Install Eigen
        run: |
          curl --output eigen-3.4.0.zip https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip
          unzip eigen-3.4.0.zip
          cd eigen-3.4.0
          mkdir build
          cd build
          cmake ..
          cmake --build . --target install
          cd ..\..
      - name: Install Spectra
        run: |
          curl --output v1.0.1.zip -L0 https://github.com/yixuan/spectra/archive/v1.0.1.zip
          unzip v1.0.1.zip
          cd spectra-1.0.1
          mkdir build
          cd build
          cmake ..
          cmake --build . --target install
          cd ..\..
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: cmake -S . -B cmake-build-release -DCMAKE_BUILD_TYPE=Test
      - run: cmake --build cmake-build-release --target stagt_static
      - uses: actions/upload-artifact@master
        with:
          name: test-binary-windows
          path: cmake-build-release/Debug/stagt_static.exe

  Test-Windows:
    runs-on: windows-latest
    needs: Build-Windows
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: test-binary-windows
          path: .
      - name: Run Tests
        run: |
          .\stagt_static.exe
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            test-binary-windows

  Docs:
    runs-on: ubuntu-latest
    steps:
      - name: Install Eigen
        run: sudo apt-get install -y libeigen3-dev
      - name: Install Spectra
        run: |
          wget https://github.com/yixuan/spectra/archive/v1.0.1.tar.gz
          tar xzvf v1.0.1.tar.gz
          cd spectra-1.0.1/
          mkdir build && cd build
          cmake ..
          sudo make all && sudo make install
      - name: Install Doxygen
        run: |
          wget https://www.doxygen.nl/files/doxygen-1.9.6.linux.bin.tar.gz
          tar xzvf doxygen-1.9.6.linux.bin.tar.gz
          sudo cp doxygen-1.9.6/bin/doxygen /usr/bin/doxygen
          sudo chmod +x /usr/bin/doxygen
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Build Docs
        run: |
          cmake -S . -B cmake-build-release -DCMAKE_BUILD_TYPE=Test
          cmake --build cmake-build-release --target Documentation
